apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.github.yeriomin.yalpstore"
        minSdkVersion 5
        targetSdkVersion 25
        versionCode 13
        versionName "0.13"
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        warning 'MissingTranslation'
        disable 'GoogleAppIndexingWarning','GoogleAppIndexingApiWarning','TrulyRandom','IconMissingDensityFolder','IconLocation'
    }

    def otaDir = "${project.rootDir}/yalp-store-ota-zip"
    def apkDir = "${project.buildDir}/outputs/apk"
    def otaZip = "yalp-store-ota.zip"
    def apkFilename = "YalpStore.apk"
    task deleteOldOtaZip(type: Delete) {
        delete "${project.buildDir}/${otaZip}"
        followSymlinks = true
    }
    task downloadYalpStoreApk(dependsOn: build) {
        doLast {
            def f = new File("${project.buildDir}/${apkFilename}")
            def url = "https://f-droid.org/repo/" + android.defaultConfig.applicationId + "_" + android.defaultConfig.versionCode + ".apk"
            if (!f.exists()) {
                println "Downloading ${url}"
                new URL(url).withInputStream { i -> f.withOutputStream { it << i } }
            }
        }
    }
    task generateOtaZipStable (dependsOn: [downloadYalpStoreApk, deleteOldOtaZip], type: Zip) {
        from(otaDir) {
            include('**')
        }
        from(project.buildDir) {
            include(apkFilename)
        }
        destinationDir project.buildDir
        archiveName otaZip
    }
    task copyYalpStoreApk(dependsOn: build, type: Copy) {
        def fileToCopy = file("${apkDir}/app-debug.apk")
        from fileToCopy
        into apkDir
        rename { String fileName ->
            fileName.replace(fileToCopy.getName(), apkFilename)
        }
    }
    task generateOtaZip (dependsOn: [build, deleteOldOtaZip, copyYalpStoreApk], type: Zip) {
        from(otaDir) {
            include('**')
        }
        from(apkDir) {
            include(apkFilename)
        }
        destinationDir project.buildDir
        archiveName otaZip
    }
    project.tasks.build.finalizedBy(generateOtaZip)
}

dependencies {
    compile 'com.github.yeriomin:play-store-api:d9fa8d8'
    compile 'eu.chainfire:libsuperuser:1.0.0.201608240809'
}
